<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>comment</key>
    <string>
            https://github.com/abusalimov/SublimeCImproved

            Derived from squirrel.tmLanguage - the original TextMate and Sublime Text
            syntax definition.

            The MIT License (MIT)

            Copyright (c) 2015 Cat Haines
            Modified for the Sqvirel language for Mafia II by Matus Cernava 2017

            Permission is hereby granted, free of charge, to any person obtaining a copy of
            this software and associated documentation files (the "Software"), to deal in
            the Software without restriction, including without limitation the rights to
            use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
            the Software, and to permit persons to whom the Software is furnished to do so,
            subject to the following conditions:

            The above copyright notice and this permission notice shall be included in all
            copies or substantial portions of the Software.

            THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
            IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
            FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
            COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
            IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
            CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    </string>
    <key>fileTypes</key>
    <array>
        <string>nut</string>
    </array>
    <key>name</key>
    <string>Squirrel</string>
    <key>patterns</key>
    <array>
        <dict>
            <key>match</key>
            <string>\b(if|else|while|do|for|foreach|break|continue|switch|case|default)\b</string>
            <key>name</key>
            <string>keyword.control.flow.squirrel</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(return|throw|resume|yield)\b</string>
            <key>name</key>
            <string>keyword.control.flow.jump.squirrel</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(try|catch)\b</string>
            <key>name</key>
            <string>keyword.control.exception.squirrel</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(clone|delete|in|typeof|instanceof)\b</string>
            <key>name</key>
            <string>keyword.operator.squirrel</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(true|false|null)\b</string>
            <key>name</key>
            <string>constant.language.squirrel</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(this|vargc|vargv|parent)\b</string>
            <key>name</key>
            <string>variable.language.squirrel</string>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.squirrel</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(//).*$\n?</string>
            <key>name</key>
            <string>comment.line.double-slash.squirrel</string>
        </dict>
        <dict>
            <key>begin</key>
            <string>/\*</string>
            <key>end</key>
            <string>\*/</string>
            <key>name</key>
            <string>comment.block.squirrel</string>
        </dict>
        <dict>
            <key>begin</key>
            <string>@"</string>
            <key>end</key>
            <string>"(?!")</string>
            <key>name</key>
            <string>string.quoted.other.squirrel</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>""</string>
                    <key>name</key>
                    <string>constant.character.squirrel</string>
                </dict>
            </array>
        </dict>
        <dict>
            <key>begin</key>
            <string>"</string>
            <key>end</key>
            <string>"</string>
            <key>name</key>
            <string>string.quoted.double.squirrel</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>\\([tabnrvf\\"'0]|x[\da-fA-F]{1,4})</string>
                    <key>name</key>
                    <string>constant.character.escape.squirrel</string>
                </dict>
                <dict>
                    <key>match</key>
                    <string>\\x?.</string>
                    <key>name</key>
                    <string>invalid.character.escape</string>
                </dict>
                <dict>
                    <key>match</key>
                    <string>\n</string>
                    <key>name</key>
                    <string>invalid.string.newline</string>
                </dict>
            </array>
        </dict>
        <dict>
            <key>match</key>
            <string>'([^\\']|\\([tabnrvf\\"'0]|x[\da-fA-F]{1,4}))'</string>
            <key>name</key>
            <string>constant.character.squirrel</string>
        </dict>
        <dict>
            <key>match</key>
            <string>'(''|[^']*'?)</string>
            <key>name</key>
            <string>invalid.character</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
            <key>name</key>
            <string>constant.numeric.squirrel</string>
        </dict>
        <dict>
            <key>match</key>
            <string>!|%|&amp;|\*|\-\-|\-|\+\+|\+|==|=|!=|&lt;=|&gt;=|&lt;=&gt;|&lt;-|&gt;&gt;&gt;|&lt;&lt;|&gt;&gt;|!|&amp;&amp;|\|\||\?\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|%=|\b(in|instanceof|typeof)\b</string>
            <key>name</key>
            <string>keyword.operator.squirrel</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(addCommandHandler)\b</string>
            <key>name</key>
            <string>keyword.control.squirrel</string>
        </dict>  
        <dict>
            <key>match</key>
            <string>\b(addEventHandler)\b</string>
            <key>name</key>
            <string>storage.type.squirrel</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(local)\b</string>
            <key>name</key>
            <string>variable.parameter</string>
        </dict>
        <dict>
            <key>parents</key>
            <string>(?:[A-Za-z_]\w*+|::[^:])++</string>
            <key>name</key>
            <string>storage.type.squirrel</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(if|Float:|while|do|switch|for|foreach|return|throw|yield|continue|try|catch|resume|default|else|case|break)\b</string>
            <key>name</key>
            <string>keyword.control.squirrel</string>
        </dict>        
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.squirrel</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter</string>
                </dict>
            </dict>
            <key>match</key>
            <string>^\s*(?:static)?\s*(function)\s*((?:[a-zA-Z0-9_]+::)?[a-zA-Z0-9_]*)\s*\((.*?)\)</string>
            <key>name</key>
            <string>other.function</string>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.other.declaration.squirrel</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>name.type.squirrel</string>
                </dict>
            </dict>
            <key>match</key>
            <string>\b(class)\b(?:\s+([a-zA-Z_][a-zA-Z\d_]*))?</string>
        </dict>
    </array>
    <key>scopeName</key>
    <string>source.nut</string>
    <key>uuid</key>
    <string>907f94ac-e9a7-41ea-b9c0-f0f9bb3e8ed6</string>
</dict>
</plist>