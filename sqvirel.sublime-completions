{
    "scope": "source.nut",
    "completions": [
        //"Server Public",
            "onScriptInit",
            "onScriptExit",
            "onScriptError", 
            "onConsoleInput",
            "onServerPulse",
            "onServerShutdown",
            "onPlayerConnect", 
            "onPlayerDisconnect", 
            "onPlayerConnectionRejected",
            "onPlayerChat", 
            "onPlayerSpawn", 
            "onPlayerChangeNick", 
            "onPlayerDeath", 
            "onPlayerChangeWeapon", 
            "onPlayerChangeHealth", 
            "onPlayerVehicleEnter", 
            "onPlayerVehicleExit", 
            
            "onClientProcess",
            "onClientFramePreRender",
            "onClientFrameRender",
            "onClientScreenshot",
            "onClientDeviceReset",
            "onClientFocusChange",
            "onClientChangeNick",
            "onClientChat",
            "onClientOpenMap",
            "onClientCloseMap",
            "onClientPlayerConnect",
            "onClientPlayerDisconnect",
            "onClientPlayerDeath",
            "onClientPlayerMoveStateChange",
            "onHudTimerComplete",
            "onGuiElementClick",
            "onGuiElementMove",
            "onGuiElementResize",
            "onGuiElementMouseEnter",
            "onGuiElementMouseLeave",
            "onGuiElementTextChange",
            "onGuiElementTextAccept",
            "onGuiElementTabChange",
            "onGuiElementSortColumn",
            "onGuiElementSelectionChange",
        //"Script Functions",
            { "trigger": "log", "contents": "log(${1:string[]})" },
            { "trigger": "getTickCount", "contents": "getTickCount()" },
            { "trigger": "getPlayerCount", "contents": "getPlayerCount()" },
            { "trigger": "getMaxPlayers", "contents": "getMaxPlayers()" },
            { "trigger": "getServerName", "contents": "getServerName()" },
            { "trigger": "getPlayers", "contents": "getPlayers()" },
            { "trigger": "date", "contents": "date()" },
    
            { "trigger": "getVehicles", "contents": "getVehicles()" },
        //"Server Functions",
            { "trigger": "setGameModeText","contents":"setGameModeText(${1:string[]})"},
            { "trigger": "getNetworkStats","contents":"getNetworkStats()"},
            { "trigger": "getWhoWas","contents":"getWhoWas()"},
            { "trigger": "getWhoWasCount","contents":"getWhoWasCount()"},
            { "trigger": "clearWhoWas","contents":"clearWhoWas()"},
            { "trigger": "shutdown","contents":"shutdown()"},
        //"Event Functions",
            { "trigger": "addEventHandler","contents":"addEventHandler(${1:string[]}, ${2:init})"},
            { "trigger": "callEvent","contents":"callEvent(${1:string[]}, ${2:number[]})"},
            { "trigger": "removeEventHandler","contents":"removeEventHandler(${1:string[]}, ${2:init})"},
            { "trigger": "triggerClientEvent","contents":"triggerClientEvent(${1:playerid}, ${2:string[]}, ${3:sub string[]})"},
        //"Area Functions",
            { "trigger": "getDistanceBetweenPoints3D","contents":"getDistanceBetweenPoints3D(${1:Float:X}, ${2:Float:Y}, ${3:Float:Z}, ${4:Float:X_1}, ${5:Float:Y_2}, ${6:Float:Z_3})"},
            { "trigger": "getDistanceBetweenPoints2D","contents":"getDistanceBetweenPoints2D(${1:Float:X}, ${1:Float:Y}, ${1:Float:X_1}, ${1:Float:Y_1})"},
            { "trigger": "isPointInArea3D","contents":"isPointInArea3D(${1:Float:PointX}, ${2:Float:PointY}, ${3:Float:PointZ}, ${4:Float:AreaX}, ${5:Float:AreaY}, ${6:Float:AreaZ}, ${7:Float:AreaX2}, ${8:Float:AreaY2}, ${9:Float:AreaZ2})"},
            { "trigger": "isPointInArea2D","contents":"isPointInArea2D(${1:Float:PointX}, ${2:Float:PointY}, ${3:Float:AreaX}, ${4:Float:AreaY}, ${5:Float:AreaX2}, ${6:Float:AreaY2})"},
            { "trigger": "isPointInCircle3D","contents":"isPointInCircle3D(${1:Float:PointX}, ${2:Float:PointY}, ${3:Float:PointZ}, ${4:Float:CircleX}, ${5:Float:CircleY}, ${6:Float:CircleZ}, ${7:Float:Radius})"},
            { "trigger": "isPointInCircle2D","contents":"isPointInCircle2D(${1:Float:PointX}, ${2:Float:PointY}, ${3:Float:CircleX}, ${4:Float:CircleY}, ${5:Float:Radius})"},
            { "trigger": "isPointInTube","contents":"isPointInTube(${1:Float:PointX}, ${2:Float:PointY}, ${3:Float:PointZ}, ${4:Float:TubeX}, ${5:Float:TubeY}, ${6:Float:TubeZ}, ${7:Float:Heigh}, ${8:Float:Radius})"},
        //"Control Functions",
            { "trigger": "kickPlayer","contents":"kick(${1:playerid})"},
            { "trigger": "banPlayer","contents":"banPlayer(${1:playerid})"},
            { "trigger": "banSerial","contents":"banSerial(${1:string serial[]}, ${2:bannerid}, ${3:seconds}, ${4:string reason[]})"},
            { "trigger": "unBanSerial","contents":"unbanSerial(${1:string serial[]})"},
            { "trigger": "isSerialBanned","contents":"isSerialBanned(${1:string serial[]})"},
        //"Game Functions",
            { "trigger": "setWeather","contents":"setWeather(${1:string name[]})"},
            { "trigger": "setSummer","contents":"setSummer(${1:bool trigger = false})"},
        //"Game Functions",
            { "trigger": "sendPlayerMessage","contents":"sendPlayerMessage(${1:playerid}, ${2:string ${3:message[]})"},
            { "trigger": "sendPlayerMessageToAll","contents":"sendPlayerMessageToAll(${1:string message[]})"},
            { "trigger": "setPlayerPosition","contents":"setPlayerPosition(${1:playerid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z})"},
            { "trigger": "setPlayerRotation","contents":"setPlayerRotation(${1:playerid}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z})"},
            { "trigger": "setPlayerHealth","contents":"setPlayerHealth(${1:playeridn, ${2:Float:health})"},
            { "trigger": "setPlayerModel","contents":"setPlayerModel(${1:playerid}, ${2:string model[]})"},
            { "trigger": "givePlayerWeapon","contents":"givePlayerWeapon(${1:playerid}, ${2:weaponid}, ${3:ammo})"},
            { "trigger": "removePlayerWeapon","contents":"removePlayerWeapon(${1:playerid}, ${2:weaponid}, ${3:ammo})"},
            { "trigger": "togglePlayerHud","contents":"togglePlayerHud(${1:playerid}, ${2:bool hud = false})"},
            { "trigger": "togglePlayerControls","contents":"togglePlayerControls(${1:playerid}, ${2:bool toggle = false})"},
            { "trigger": "getPlayerNetworkStats","contents":"getPlayerNetworkStats(${1:playerid})"},
            { "trigger": "getPlayerSerial","contents":"getPlayerSerial(${1:playerid})"},
            { "trigger": "putPlayerInVehicle","contents":"putPlayerInVehicle(${1:playerid}, ${2:vehicleid}, ${3:seat})"},
            { "trigger": "removePlayerFromVehicle","contents":"removePlayerFromVehicle(${1:playerid})"},
            { "trigger": "isPlayerConnected","contents":"isPlayerConnected(${1:playerid})"},
            { "trigger": "isPlayerSpawned","contents":"isPlayerSpawned(${1:playerid})"},
            { "trigger": "isPlayerDead","contents":"isPlayerDead(${1:playerid})"},
            { "trigger": "isPlayerInVehicle","contents":"isPlayerInVehicle(${1:playerid})"},
            { "trigger": "getPlayerName","contents":"getPlayerName(${1:playerid})"},
            { "trigger": "getPlayerPosition","contents":"getPlayerPosition(${1:playerid})"},
            { "trigger": "getPlayerHealth","contents":"getPlayerHealth(${1:playerid})"},
            { "trigger": "getPlayerModel","contents":"getPlayerModel(${1:playerid})"},
            { "trigger": "getPlayerWeapon","contents":"getPlayerWeapon(${1:playerid})"},
            { "trigger": "getPlayerVehicle","contents":"getPlayerVehicle(${1:playerid})"},
            { "trigger": "getPlayerPing","contents":"getPlayerPing(${1:playerid})"},
            { "trigger": "respawnPlayer","contents":"respawnPlayer(${1:playerid})"},
            { "trigger": "setPlayerAnimStyle","contents":"setPlayerAnimStyle(${1:playerid}, ${2:string directory[]}, ${3:string animStyle[]})"},
            { "trigger": "setPlayerHandModel","contents":"setPlayerHandModel(${1:playerid}, ${2:hand}, ${3:model})"},
        //Vehicle Functions - General
            { "trigger": "createVehicle","contents":"createVehicle(${1:model}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z}, ${5:Float:rx}, ${6:Float:ry}, ${7:Float:rz})"},
            { "trigger": "destroyVehicle","contents":"destroyVehicle(${1:vehicleid})"},
            { "trigger": "setVehiclePosition","contents":"setVehiclePosition(${1:vehicleid}, ${2:Float:x}, ${3:Float:y}, ${1:Float:z})"},
            { "trigger": "getVehiclePosition","contents":"getVehiclePosition(${1:vehicleid})"},
            { "trigger": "setVehicleRotation","contents":"setVehicleRotation(${1:vehicleid}, ${2:Float:rx}, ${3:Float:ry}, ${4:Float:rz})"},
            { "trigger": "getVehicleRotation","contents":"getVehicleRotation(${1:vehcileid})"},
            { "trigger": "setVehicleSpeed","contents":"setVehicleSpeed(${1:vehicleid}, ${2:Float:speedX}, ${3:Float:speedY}, ${4:Float:speedZ})"},
            { "trigger": "getVehicleSpeed","contents":"getVehicleSpeed(${1:vehicleId})"},
            { "trigger": "setVehicleFuel","contents":"setVehicleFuel(${1:vehicleid}, ${2:Float:amount})"},
            { "trigger": "getVehicleFuel","contents":"getVehicleFuel(${1:vehicleid})"},
            { "trigger": "setVehicleEngineState","contents":"setVehicleEngineState(${1:vehicleid}, ${2:bool state = false})"},
            { "trigger": "getVehicleEngineState","contents":"getVehicleEngineState(${1:vehicleid},${2: bool state = false})"},
            { "trigger": "SetVehicleRespawnTime","contents":"SetVehicleRespawnTime(${1:Unknow})"},
            { "trigger": "getVehicleRespawnTime","contents":"getVehicleRespawnTime(${1:vehicleId})"},
            { "trigger": "respawnVehicle","contents":"respawnVehicle(${1:vehicleid})"},
            { "trigger": "repairVehicle","contents":"repairVehicle(${1:vehicleid})"},
            { "trigger": "explodeVehicle","contents":"explodeVehicle(${1:vehicleid})"},
        //Vehicle Functions - Appearance 
            { "trigger": "setVehicleColour","contents":"setVehicleColour(${1:vehicleid}, ${2:r}, ${3:g}, ${4:b}, ${5:r}, ${6:g}, ${7:b})"},
            { "trigger": "getVehicleColour","contents":"getVehicleColour(${1:vehicleid})"},
            { "trigger": "setVehiclePlateText","contents":"setVehiclePlateText(${1:vehicleid}, ${2:string text[]})"},
            { "trigger": "getVehiclePlateText","contents":"getVehiclePlateText(${1:vehicleid})"},
            { "trigger": "setVehicleDirtLevel","contents":"setVehicleDirtLevel(${1:vehicleid}, ${2:Float:level})"},
            { "trigger": "getVehicleDirtLevel","contents":"getVehicleDirtLevel(${1:vehicleid})"},
            { "trigger": "setVehiclePartOpen","contents":"setVehiclePartOpen(${1:vehicleid}, ${2:partid}, ${3:bool state = false})"},
            { "trigger": "isVehiclePartOpen","contents":"isVehiclePartOpen(${1:vehicleid}, ${2:partid})"},
            { "trigger": "setVehicleWindowOpen","contents":"setVehicleWindowOpen(${1:vehicleid}, ${2:seatid}, ${3:bool state = false})"},
            { "trigger": "isVehicleWindowOpen","contents":"isVehicleWindowOpen(${1:vehicleid}, ${2:seatid})"},
            { "trigger": "setVehicleTuningTable","contents":"setVehicleTuningTable(${1:vehicleid}, ${2:tableid})"},
            { "trigger": "getVehicleTuningTable","contents":"getVehicleTuningTable(${1:vehicleid})"},
            { "trigger": "setVehicleWheelTexture","contents":"setVehicleWheelTexture(${1:vehicleid}, ${2:wheelid}, ${3:textureid})"},
            { "trigger": "getVehicleWheelTexture","contents":"getVehicleWheelTexture(${1:vehicleid}, ${2:wheelid})"},
            { "trigger": "getVehicleModel","contents":"getVehicleModel(${1:vehicleid})"},
        // Signals
            { "trigger": "setVehicleSirenState","contents":"setVehicleSirenState(${1:vehicleid}, ${2:bool state = false})"},
            { "trigger": "getVehicleSirenState","contents":"getVehicleSirenState(${1:vehicleid})"},
            { "trigger": "setVehicleBeaconLightState","contents":"setVehicleBeaconLightState(${1:vehicleid}, ${1:bool state = false)"},
            { "trigger": "getVehicleBeaconLightState","contents":"getVehicleBeaconLightState(${1:vehicleid})"},
            { "trigger": "setVehicleHornState","contents":"setVehicleHornState(${1:vehicleid}, ${1:bool state = false})"},
            { "trigger": "getVehicleHornState","contents":"getVehicleHornState(${1:vehicleid})"},
        // Lights
            { "trigger": "getVehicleLightState","contents":"getVehicleLightState(${1:vehicleid})"},
            { "trigger": "setVehicleLightState","contents":"setVehicleLightState(${1:vehicleid}, ${2:bool lightState = false})"},
            { "trigger": "getIndicatorLightState","contents":"getIndicatorLightState(${1:vehicleid}, ${2:indicatorSide})"},
            { "trigger": "setIndicatorLightState","contents":"setIndicatorLightState(${1:vehicleid}, ${2:indicatorSide}, ${3:bool lightState = false})"},
            { "trigger": "getTaxiLightState","contents":"getTaxiLightState(${1:vehicleid})"},
            { "trigger": "setTaxiLightState","contents":"setTaxiLightState(${1:vehicleid}, ${2:bool lightState = false})"},
        // Ped Functions
            { "trigger": "createPed","contents":"createPed(${1:model}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z}, ${5:Float:rx}, ${6:Float:ry}, ${7:Float:rz})"},
            { "trigger": "destroyPed","contents":"destroyPed(${1:pedid})"},
            { "trigger": "setPedModel","contents":"setPedModel(${1:pedid}, ${2:model})"},
            { "trigger": "setPedName","contents":"setPedName(${1:pedid}, ${2:string name[]})"},
            { "trigger": "getPedName","contents":"getPedName(${1:pedid})"},
            { "trigger": "showPedName","contents":"showPedName(${1:pedid}, ${2:bool show = false})"},
            { "trigger": "getPedPosition","contents":"getPedPosition(${1:pedid})"},
        // Camera functions
            { "trigger": "SetCameraPosition","contents":"SetCameraPosition(${1:Unknow})"},
            { "trigger": "getCameraPosition","contents":"getCameraPosition(${1:pedid})"},
            { "trigger": "SetCameraRotation","contents":"SetCameraRotation(${1:Unknow})"},
            { "trigger": "getCameraRotation","contents":"getCameraRotation()"},
            { "trigger": "simpleShake","contents":"simpleShake(${1:speed}, ${2:Float:strength}, ${3:Float:duration})"}
    ]
}
